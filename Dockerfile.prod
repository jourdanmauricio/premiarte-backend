# Etapa 1: Builder
# Esta etapa es para la construcción. Contendrá todas las dependencias.
FROM node:18-alpine AS builder

# Establece el directorio de trabajo
WORKDIR /app

# Copia los archivos package.json y package-lock.json de la raíz y del plugin.
# Esto asegura que todas las dependencias se instalen en un solo paso y que el caché de Docker se use de forma eficiente.
COPY package*.json ./
COPY src/plugins/premiarte-manager/package*.json ./src/plugins/premiarte-manager/

# Instala TODAS las dependencias (producción y desarrollo) en un solo paso
# Esto es más eficiente que tener dos comandos de instalación separados.
RUN npm install --ignore-scripts

# Copia todo el código fuente de tu aplicación (incluyendo los plugins)
COPY . .

# Limpia los archivos de build antiguos para evitar errores de caché o artefactos anteriores
RUN rm -rf .strapi build

# Aumenta el límite de memoria del heap de JavaScript para el proceso de build.
# Esto es crucial para evitar el error "JavaScript heap out of memory" en entornos con poca RAM.
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Construye el plugin de forma explícita.
# Se navega al directorio del plugin para ejecutar 'npm run build' en el contexto correcto.
RUN cd ./src/plugins/premiarte-manager && npm run build

# Construye la aplicación principal. Ahora el panel de administración del plugin ya existe.
RUN npm run build

# Etapa 2: Final
# Esta será la imagen de producción, más ligera y optimizada.
FROM node:18-alpine

# Instala curl para el health check
RUN apk add --no-cache curl

# Establece el directorio de trabajo
WORKDIR /app

# Copia ÚNICAMENTE las dependencias de producción y los archivos de build
# Esto mantiene la imagen final muy ligera.
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/build ./build
COPY --from=builder /app/.strapi ./.strapi

# Copia los archivos del código fuente necesarios para la producción
COPY . .

# Expone el puerto por defecto de Strapi
EXPOSE 1337

# Salud de la aplicación
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:1337/_health || exit 1

# Comando para iniciar la aplicación en producción
CMD ["npm", "start"]
